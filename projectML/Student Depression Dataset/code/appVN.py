import tkinter as tk
from tkinter import ttk, messagebox
import numpy as np
import joblib

# T·∫£i m√¥ h√¨nh ƒë√£ hu·∫•n luy·ªán (ƒë√£ hu·∫•n luy·ªán v·ªõi 13 ƒë·∫∑c tr∆∞ng)
model = joblib.load(r"C:\Users\97ngu\OneDrive\Desktop\course\ML\projectML\Student Depression Dataset\testAPPmodelStudentDepression.pkl")

def lam_sach(text):
    return text.strip().lower()

def xu_ly_du_lieu():
    try:
        map_gioi_tinh = {"nam": "male", "n·ªØ": "female"}
        map_ngu = {"kh·ªèe m·∫°nh": "healthy", "trung b√¨nh": "moderate", "kh√¥ng kh·ªèe": "unhealthy"}
        map_an = {"kh·ªèe m·∫°nh": "healthy", "trung b√¨nh": "moderate", "kh√¥ng kh·ªèe": "unhealthy"}
        map_yesno = {"c√≥": "yes", "kh√¥ng": "no"}

        # √Ånh x·∫° gi√° tr·ªã
        gioi_tinh = 1 if map_gioi_tinh[lam_sach(gioi_tinh_var.get())] == "male" else 0
        ngu = {"healthy": 2, "moderate": 1, "unhealthy": 0}[map_ngu[lam_sach(ngu_var.get())]]
        an = {"healthy": 0, "moderate": 1, "unhealthy": 2}[map_an[lam_sach(an_var.get())]]
        tu_tu = 1 if map_yesno[lam_sach(tu_tu_var.get())] == "yes" else 0
        tien_su = 1 if map_yesno[lam_sach(tien_su_var.get())] == "yes" else 0

        dau_vao = [
            gioi_tinh,
            float(tuoi_var.get()),
            float(ap_luc_hoc_var.get()),
            float(ap_luc_lam_var.get()),
            float(diem_tb_var.get()),
            float(hl_hoc_var.get()),
            float(hl_lam_var.get()),
            ngu,
            an,
            tu_tu,
            float(gio_lam_var.get()),
            float(tai_chinh_var.get()),
            tien_su
        ]
        return np.array(dau_vao).reshape(1, -1)
    except Exception as e:
        messagebox.showerror("L·ªói", f"Vui l√≤ng ki·ªÉm tra l·∫°i d·ªØ li·ªáu nh·∫≠p.\n{e}")
        return None

def du_doan():
    x = xu_ly_du_lieu()
    if x is not None:
        ket_qua = model.predict(x)[0]
        msg = "‚ö†Ô∏è C√≥ d·∫•u hi·ªáu tr·∫ßm c·∫£m." if ket_qua == 1 else "‚úÖ Kh√¥ng c√≥ d·∫•u hi·ªáu tr·∫ßm c·∫£m."
        messagebox.showinfo("K·∫øt qu·∫£ d·ª± ƒëo√°n", msg)

# Giao di·ªán ch√≠nh
root = tk.Tk()
root.title("·ª®ng d·ª•ng D·ª± ƒëo√°n Tr·∫ßm c·∫£m Sinh vi√™n")
root.geometry("540x700")
tk.Label(root, text="Vui l√≤ng nh·∫≠p th√¥ng tin sinh vi√™n:", font=("Arial", 14)).pack(pady=10)
khung = tk.Frame(root)
khung.pack()

def tao_truong(nhan, bien, hang, kieu=tk.Entry, **kwargs):
    tk.Label(khung, text=nhan).grid(row=hang, column=0, padx=10, pady=5, sticky='w')
    o = kieu(khung, textvariable=bien, **kwargs)
    o.grid(row=hang, column=1, padx=10, pady=5, sticky='ew')

# Kh·ªüi t·∫°o bi·∫øn
gioi_tinh_var = tk.StringVar(value="Nam")
ngu_var = tk.StringVar(value="Trung b√¨nh")
an_var = tk.StringVar(value="Trung b√¨nh")
tu_tu_var = tk.StringVar(value="Kh√¥ng")
tien_su_var = tk.StringVar(value="Kh√¥ng")
tuoi_var = tk.StringVar()
ap_luc_hoc_var = tk.StringVar()
ap_luc_lam_var = tk.StringVar()
diem_tb_var = tk.StringVar()
hl_hoc_var = tk.StringVar()
hl_lam_var = tk.StringVar()
gio_lam_var = tk.StringVar()
tai_chinh_var = tk.StringVar()

# Giao di·ªán nh·∫≠p li·ªáu
tao_truong("Gi·ªõi t√≠nh (Nam/N·ªØ):", gioi_tinh_var, 0, ttk.Combobox, values=["Nam", "N·ªØ"], state="readonly")
tao_truong("Tu·ªïi:", tuoi_var, 1)
tao_truong("√Åp l·ª±c h·ªçc t·∫≠p (1-5):", ap_luc_hoc_var, 2)
tao_truong("√Åp l·ª±c c√¥ng vi·ªác (0-5):", ap_luc_lam_var, 3)
tao_truong("ƒêi·ªÉm GPA (0-10):", diem_tb_var, 4)
tao_truong("H√†i l√≤ng h·ªçc t·∫≠p (0-5):", hl_hoc_var, 5)
tao_truong("H√†i l√≤ng c√¥ng vi·ªác (0-4):", hl_lam_var, 6)
tao_truong("Ch·∫•t l∆∞·ª£ng gi·∫•c ng·ªß:", ngu_var, 7, ttk.Combobox, values=["Kh·ªèe m·∫°nh", "Trung b√¨nh", "Kh√¥ng kh·ªèe"], state="readonly")
tao_truong("Th√≥i quen ƒÉn u·ªëng:", an_var, 8, ttk.Combobox, values=["Kh·ªèe m·∫°nh", "Trung b√¨nh", "Kh√¥ng kh·ªèe"], state="readonly")
tao_truong("T·ª´ng c√≥ √Ω nghƒ© t·ª± t·ª≠? (C√≥/Kh√¥ng):", tu_tu_var, 9, ttk.Combobox, values=["C√≥", "Kh√¥ng"], state="readonly")
tao_truong("Gi·ªù h·ªçc/l√†m m·ªói ng√†y:", gio_lam_var, 10)
tao_truong("√Åp l·ª±c t√†i ch√≠nh (0-5):", tai_chinh_var, 11)
tao_truong("Ti·ªÅn s·ª≠ b·ªánh t√¢m l√Ω trong gia ƒë√¨nh? (C√≥/Kh√¥ng):", tien_su_var, 12, ttk.Combobox, values=["C√≥", "Kh√¥ng"], state="readonly")

# N√∫t d·ª± ƒëo√°n
tk.Button(root, text="üîç D·ª± ƒëo√°n", command=du_doan, bg="green", fg="white", font=("Arial", 12)).pack(pady=20)

root.mainloop()